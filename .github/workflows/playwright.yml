name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      browser:
        type: choice
        description: Which browser to test
        required: true
        options:
          - firefox
          - chromium
          - webkit

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: npx playwright test --project ${{ github.event.inputs.browser || 'chromium'}}
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
    - name: Cache
      uses: actions/cache@v4.2.0
      with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: 
          # An explicit key for restoring and saving the cache
          key: 
          # An ordered multiline string listing the prefix-matched keys, that are used for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
          restore-keys: # optional
          # The chunk size used to split up large files during upload, in bytes
          upload-chunk-size: # optional
          # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
          enableCrossOsArchive: # optional, default is false
          # Fail the workflow if cache entry is not found
          fail-on-cache-miss: # optional, default is false
          # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
          lookup-only: # optional, default is false
          # Run the post step to save the cache even if another step before fails
          save-always: # optional, default is false
                